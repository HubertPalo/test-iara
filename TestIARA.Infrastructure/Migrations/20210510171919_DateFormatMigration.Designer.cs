// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestIARA.Infrastructure.Persistence;

namespace TestIARA.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210510171919_DateFormatMigration")]
    partial class DateFormatMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TestIARA.Domain.Entities.TCotacao", b =>
                {
                    b.Property<int>("NumeroCotacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("CNPJComprador")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("CNPJFornecedor")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasMaxLength(14);

                    b.Property<string>("Complemento")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("DataCotacao")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("DataEntregaCotacao")
                        .IsRequired()
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .HasColumnType("text");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UF")
                        .HasColumnType("varchar(2)")
                        .HasMaxLength(2);

                    b.HasKey("NumeroCotacao")
                        .HasName("PK_TCotacao");

                    b.ToTable("TCotacao");
                });

            modelBuilder.Entity("TestIARA.Domain.Entities.TCotacaoItem", b =>
                {
                    b.Property<int>("NumeroCotacaoItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("NumeroCotacao")
                        .HasColumnType("int");

                    b.Property<int>("NumeroItem")
                        .HasColumnType("int");

                    b.Property<int?>("Preco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<bool>("State")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Unidade")
                        .HasColumnType("text");

                    b.HasKey("NumeroCotacaoItem")
                        .HasName("PK_TCotacaoItem");

                    b.HasIndex("NumeroCotacao");

                    b.ToTable("TCotacaoItem");
                });

            modelBuilder.Entity("TestIARA.Domain.Entities.TCotacaoItem", b =>
                {
                    b.HasOne("TestIARA.Domain.Entities.TCotacao", "Cotacao")
                        .WithMany("CotacaoItems")
                        .HasForeignKey("NumeroCotacao")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
